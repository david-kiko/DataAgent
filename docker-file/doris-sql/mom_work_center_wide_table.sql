-- =============================================
-- MOM工作中心宽表 - 消除link表，通过冗余数据实现
-- 一个工作中心关联多个设备/人员/供应商时会产生多条记录
-- =============================================
CREATE DATABASE IF NOT EXISTS bi;
-- 1. 创建宽表
CREATE TABLE IF NOT EXISTS bi.MOM_WORK_CENTER_WIDE (
  -- 工作中心基础信息
  WORK_CENTER_ID BIGINT NOT NULL COMMENT '工作中心ID',
  EQUIP_ID BIGINT COMMENT '设备ID',
  PERSON_ID BIGINT COMMENT '人员ID',
  SUPPLIER_ID BIGINT COMMENT '供应商ID',
  WORK_CENTER_CODE VARCHAR(512) COMMENT '工作中心编码',
  WORK_CENTER_NAME VARCHAR(512) COMMENT '工作中心名称',
  WORK_CENTER_TYPE VARCHAR(256) COMMENT '工作中心类型',
  WORK_CENTER_CATEGORY VARCHAR(256) COMMENT '工作中心分类',
  WORK_CENTER_REMARK VARCHAR(1024) COMMENT '工作中心备注',
  WORK_CENTER_SECURITY_LEVEL VARCHAR(256) COMMENT '工作中心密级',
  
  -- 工厂组织信息
  BIZ_ORG_ID BIGINT COMMENT '工厂组织ID',
  BIZ_ORG_CODE VARCHAR(512) COMMENT '工厂组织编码',
  BIZ_ORG_NAME VARCHAR(512) COMMENT '工厂组织名称',
  BIZ_ORG_TYPE VARCHAR(256) COMMENT '工厂组织类型',
  BIZ_ORG_SHORT_NAME VARCHAR(256) COMMENT '工厂组织简称',
  BIZ_ORG_FACTORY_TYPE VARCHAR(256) COMMENT '工厂类型',
  
  -- 所属工厂信息
  FACTORY_ID BIGINT COMMENT '所属工厂ID',
  FACTORY_CODE VARCHAR(512) COMMENT '所属工厂编码',
  FACTORY_NAME VARCHAR(512) COMMENT '所属工厂名称',
  
  -- 设备信息 (来自MOM_EQUIP)
  EQUIP_CODE VARCHAR(512) COMMENT '设备编码',
  EQUIP_NAME VARCHAR(512) COMMENT '设备名称',
  EQUIP_TYPE VARCHAR(256) COMMENT '设备类型',
  EQUIP_CATEGORY VARCHAR(256) COMMENT '设备类别',
  EQUIP_MODEL_SPEC VARCHAR(256) COMMENT '设备型号规格',
  EQUIP_INSTALL_LOCATION VARCHAR(512) COMMENT '设备安装位置',
  EQUIP_LOCATION VARCHAR(255) COMMENT '设备位置',
  EQUIP_SUPPLIER VARCHAR(256) COMMENT '设备供应商',
  EQUIP_FACTORY_NUMBER VARCHAR(256) COMMENT '设备出厂编号',
  EQUIP_VERSION VARCHAR(256) COMMENT '设备版本号',
  EQUIP_PUT_INTO_USE_DATE DATETIME COMMENT '设备投用日期',
  EQUIP_TOTAL_RUNNING_HOURS DECIMAL(10,0) COMMENT '设备累计运行时长',
  EQUIP_HEALTH_SCORE DECIMAL(10,0) COMMENT '设备健康度评分',
  EQUIP_NON_STANDARD_FLAG VARCHAR(1) COMMENT '设备非标标记',
  EQUIP_SPECIAL_FLAG VARCHAR(1) COMMENT '设备特殊标记',
  EQUIP_BOTTLENECK_FLAG VARCHAR(1) COMMENT '设备瓶颈资源标记',
  EQUIP_IMPORTANT_FLAG VARCHAR(1) COMMENT '设备重要标记',
  EQUIP_KEY_FLAG VARCHAR(1) COMMENT '设备关键标记',
  
  -- 人员信息 (来自SYS_PERSON)
  PERSON_CODE VARCHAR(512) COMMENT '人员编码',
  PERSON_NAME VARCHAR(512) COMMENT '人员姓名',
  PERSON_SEX VARCHAR(10) COMMENT '人员性别',
  PERSON_PHONE_NUMBER VARCHAR(20) COMMENT '人员联系方式',
  PERSON_EMAIL VARCHAR(255) COMMENT '人员电子邮箱',
  PERSON_ID_NO VARCHAR(256) COMMENT '人员身份证号',
  PERSON_BIRTH_DATE DATETIME COMMENT '人员出生日期',
  PERSON_EMPLOYED_STATUS VARCHAR(80) COMMENT '人员在职状态',
  PERSON_DUTY_STATUS VARCHAR(80) COMMENT '人员在岗状态',
  
  -- 用户信息 (来自SYS_USER)
  USER_ID BIGINT COMMENT '用户ID',
  USER_CODE VARCHAR(512) COMMENT '用户编号',
  USER_NAME VARCHAR(512) COMMENT '用户名称',
  USER_TYPE VARCHAR(256) COMMENT '用户类型',
  USER_PERSON_LEVEL VARCHAR(80) COMMENT '用户安全等级',
  USER_STATE VARCHAR(256) COMMENT '用户状态',
  USER_LOCK_FLAG VARCHAR(1) COMMENT '用户锁定标记',
  
  -- 供应商信息 (来自SYS_BIZ_ORG，当BIZ_ORG_TYPE=110时)
  SUPPLIER_CODE VARCHAR(512) COMMENT '供应商编码',
  SUPPLIER_NAME VARCHAR(512) COMMENT '供应商名称',
  SUPPLIER_SHORT_NAME VARCHAR(256) COMMENT '供应商简称',
  
  -- 设备责任人信息 
  RESPONSIBLE_PERSON_ID BIGINT COMMENT '设备责任人ID',
  RESPONSIBLE_PERSON_CODE VARCHAR(512) COMMENT '设备责任人编码',
  RESPONSIBLE_PERSON_NAME VARCHAR(512) COMMENT '设备责任人姓名',
  
  -- 使用组织信息
  USING_BIZ_ORG_ID BIGINT COMMENT '使用组织ID',
  USING_BIZ_ORG_CODE VARCHAR(512) COMMENT '使用组织编码',
  USING_BIZ_ORG_NAME VARCHAR(512) COMMENT '使用组织名称',
  
  -- 分发点信息
  DISTRIBUTION_POINT_ID BIGINT COMMENT '分发点ID',
  
  -- 系统字段
  ENV VARCHAR(80) COMMENT '环境标识',
  CREATOR_ID BIGINT COMMENT '创建者ID',
  CREATOR_CODE VARCHAR(512) COMMENT '创建者编码',
  CREATOR_NAME VARCHAR(512) COMMENT '创建者姓名',
  CREATE_TIME DATETIME COMMENT '创建时间',
  MODIFIER_ID BIGINT COMMENT '修改者ID',
  MODIFIER_CODE VARCHAR(512) COMMENT '修改者编码',
  MODIFIER_NAME VARCHAR(512) COMMENT '修改者姓名',
  LATEST_UPDATE_TIME DATETIME COMMENT '最近修改时间',
)
UNIQUE KEY(WORK_CENTER_ID, EQUIP_ID, PERSON_ID, SUPPLIER_ID)
COMMENT 'MOM工作中心宽表'
DISTRIBUTED BY HASH(WORK_CENTER_ID) BUCKETS 10
PROPERTIES (
    "replication_allocation" = "tag.location.default: 1",
    "enable_unique_key_merge_on_write" = "true"
);

-- =============================================
-- 2. 插入数据SQL - 一次性关联所有表
-- =============================================

INSERT INTO bi.MOM_WORK_CENTER_WIDE (
  -- 工作中心基础信息
  WORK_CENTER_ID, EQUIP_ID, PERSON_ID, SUPPLIER_ID, WORK_CENTER_CODE, WORK_CENTER_NAME, WORK_CENTER_TYPE, WORK_CENTER_CATEGORY, 
  WORK_CENTER_REMARK, WORK_CENTER_SECURITY_LEVEL,
  
  -- 工厂组织信息
  BIZ_ORG_ID, BIZ_ORG_CODE, BIZ_ORG_NAME, BIZ_ORG_TYPE, BIZ_ORG_SHORT_NAME, BIZ_ORG_FACTORY_TYPE,
  
  -- 所属工厂信息
  FACTORY_ID, FACTORY_CODE, FACTORY_NAME,
  
  -- 设备信息
  EQUIP_CODE, EQUIP_NAME, EQUIP_TYPE, EQUIP_CATEGORY, EQUIP_MODEL_SPEC, 
  EQUIP_INSTALL_LOCATION, EQUIP_LOCATION, EQUIP_SUPPLIER, EQUIP_FACTORY_NUMBER, 
  EQUIP_VERSION, EQUIP_PUT_INTO_USE_DATE, EQUIP_TOTAL_RUNNING_HOURS, EQUIP_HEALTH_SCORE,
  EQUIP_NON_STANDARD_FLAG, EQUIP_SPECIAL_FLAG, EQUIP_BOTTLENECK_FLAG, 
  EQUIP_IMPORTANT_FLAG, EQUIP_KEY_FLAG,
  
  -- 人员信息
  PERSON_CODE, PERSON_NAME, PERSON_SEX, PERSON_PHONE_NUMBER, PERSON_EMAIL,
  PERSON_ID_NO, PERSON_BIRTH_DATE, PERSON_EMPLOYED_STATUS, PERSON_DUTY_STATUS,
  
  -- 用户信息
  USER_ID, USER_CODE, USER_NAME, USER_TYPE, USER_PERSON_LEVEL, USER_STATE, USER_LOCK_FLAG,
  
  -- 供应商信息
  SUPPLIER_CODE, SUPPLIER_NAME, SUPPLIER_SHORT_NAME,
  
  -- 设备责任人信息
  RESPONSIBLE_PERSON_ID, RESPONSIBLE_PERSON_CODE, RESPONSIBLE_PERSON_NAME,
  
  -- 使用组织信息
  USING_BIZ_ORG_ID, USING_BIZ_ORG_CODE, USING_BIZ_ORG_NAME,
  
  -- 分发点信息
  DISTRIBUTION_POINT_ID,
  
  -- 系统字段
  ENV, CREATOR_ID, CREATOR_CODE, CREATOR_NAME, CREATE_TIME, MODIFIER_ID, MODIFIER_CODE, MODIFIER_NAME, LATEST_UPDATE_TIME
)
SELECT
  -- 工作中心基础信息
  wc.CID as WORK_CENTER_ID,
  e.CID as EQUIP_ID,
  p.CID as PERSON_ID,
  supplier.CID as SUPPLIER_ID,
  wc.CCODE as WORK_CENTER_CODE,
  wc.CNAME as WORK_CENTER_NAME,
  -- 工作中心类型枚举转换: WW->外委, XZ->小组, RY->人员, SB->设备, CX->产线, GD->工段, GC->工厂, CJ->车间
  CASE wc.CWORK_CENTER_TYPE 
    WHEN 'WW' THEN '外委'
    WHEN 'XZ' THEN '小组'
    WHEN 'RY' THEN '人员'
    WHEN 'SB' THEN '设备'
    WHEN 'CX' THEN '产线'
    WHEN 'GD' THEN '工段'
    WHEN 'GC' THEN '工厂'
    WHEN 'CJ' THEN '车间'
    ELSE wc.CWORK_CENTER_TYPE
  END as WORK_CENTER_TYPE,
  -- 工作中心分类枚举转换: ZP->装配, JG->加工, JY->检验, TYSC->通用生产
  CASE wc.CWORK_CENTER_CATEGORY 
    WHEN 'ZP' THEN '装配'
    WHEN 'JG' THEN '加工'
    WHEN 'JY' THEN '检验'
    WHEN 'TYSC' THEN '通用生产'
    ELSE wc.CWORK_CENTER_CATEGORY
  END as WORK_CENTER_CATEGORY,
  wc.CREMARK as WORK_CENTER_REMARK,
  wc.CSECURITY_LEVEL as WORK_CENTER_SECURITY_LEVEL,
  
  -- 工厂组织信息
  bo.CID as BIZ_ORG_ID,
  bo.CCODE as BIZ_ORG_CODE,
  bo.CNAME as BIZ_ORG_NAME,
  -- 工厂组织类型枚举转换: 50->班组, 20->工厂, 21->部门, 110->供应商, 40->工段, 30->车间, 10->公司
  CASE bo.CBIZ_ORG_TYPE 
    WHEN '50' THEN '班组'
    WHEN '20' THEN '工厂'
    WHEN '21' THEN '部门'
    WHEN '110' THEN '供应商'
    WHEN '40' THEN '工段'
    WHEN '30' THEN '车间'
    WHEN '10' THEN '公司'
    ELSE bo.CBIZ_ORG_TYPE
  END as BIZ_ORG_TYPE,
  bo.CSHORT_NAME as BIZ_ORG_SHORT_NAME,
  -- 工厂类型枚举转换: ASSEMBLY->装配专业, MACHINING->机械加工专业
  CASE bo.CFACTORY_TYPE 
    WHEN 'ASSEMBLY' THEN '装配专业'
    WHEN 'MACHINING' THEN '机械加工专业'
    ELSE bo.CFACTORY_TYPE
  END as BIZ_ORG_FACTORY_TYPE,
  
  -- 所属工厂信息
  factory.CID as FACTORY_ID,
  factory.CCODE as FACTORY_CODE,
  factory.CNAME as FACTORY_NAME,
  
  -- 设备信息
  e.CCODE as EQUIP_CODE,
  e.CNAME as EQUIP_NAME,
  -- 设备类型枚举转换: ET_040_VEHICLE->生产车辆, ET_030_SPECIAL->特种设备, ET_020_INSTRUMENT->仪器设备, ET_010_PRODUCTION->生产设备
  CASE e.CEQUIP_TYPE 
    WHEN 'ET_040_VEHICLE' THEN '生产车辆'
    WHEN 'ET_030_SPECIAL' THEN '特种设备'
    WHEN 'ET_020_INSTRUMENT' THEN '仪器设备'
    WHEN 'ET_010_PRODUCTION' THEN '生产设备'
    ELSE e.CEQUIP_TYPE
  END as EQUIP_TYPE,
  e.CCATEGORY as EQUIP_CATEGORY,
  e.CMODEL_SPEC as EQUIP_MODEL_SPEC,
  e.CINSTALL_LOCATION as EQUIP_INSTALL_LOCATION,
  e.CLOCATION as EQUIP_LOCATION,
  e.CSUPPLIER as EQUIP_SUPPLIER,
  e.CFACTORY_NUMBER as EQUIP_FACTORY_NUMBER,
  e.CVERSION as EQUIP_VERSION,
  e.CPUT_INTO_USE_DATE as EQUIP_PUT_INTO_USE_DATE,
  e.CTOTAL_RUNNING_HOURS as EQUIP_TOTAL_RUNNING_HOURS,
  e.CHEALTH_SCORE as EQUIP_HEALTH_SCORE,
  e.CNON_STANDARD_FLAG as EQUIP_NON_STANDARD_FLAG,
  e.CSPECIAL_FLAG as EQUIP_SPECIAL_FLAG,
  e.CBOTTLENECK_FLAG as EQUIP_BOTTLENECK_FLAG,
  e.CIMPORTANT_FLAG as EQUIP_IMPORTANT_FLAG,
  e.CKEY_FLAG as EQUIP_KEY_FLAG,
  
  -- 人员信息
  p.CCODE as PERSON_CODE,
  p.CNAME as PERSON_NAME,
  -- 人员性别枚举转换: M->男, F->女
  CASE p.CSEX 
    WHEN 'M' THEN '男'
    WHEN 'F' THEN '女'
    ELSE p.CSEX
  END as PERSON_SEX,
  p.CPHONE_NUMBER as PERSON_PHONE_NUMBER,
  p.CEMAIL as PERSON_EMAIL,
  p.CID_NO as PERSON_ID_NO,
  p.CBIRTH_DATE as PERSON_BIRTH_DATE,
  -- 人员在职状态枚举转换: EMPLOYED->在职, REHIRED->返聘, TERMINATED->离职
  CASE p.CEMPLOYED_STATUS 
    WHEN 'EMPLOYED' THEN '在职'
    WHEN 'REHIRED' THEN '返聘'
    WHEN 'TERMINATED' THEN '离职'
    ELSE p.CEMPLOYED_STATUS
  END as PERSON_EMPLOYED_STATUS,
  -- 人员在岗状态枚举转换: LEAVE->脱岗, WORK->在岗
  CASE p.CDUTY_STATUS 
    WHEN 'LEAVE' THEN '脱岗'
    WHEN 'WORK' THEN '在岗'
    ELSE p.CDUTY_STATUS
  END as PERSON_DUTY_STATUS,
  
  -- 用户信息
  u.CID as USER_ID,
  u.CCODE as USER_CODE,
  u.CNAME as USER_NAME,
  u.CUSER_TYPE as USER_TYPE,
  -- 用户安全等级枚举转换: 30->重要, 50->重要, 40->核心, 20->一般
  CASE u.CPERSON_LEVEL 
    WHEN '30' THEN '重要'
    WHEN '50' THEN '重要'
    WHEN '40' THEN '核心'
    WHEN '20' THEN '一般'
    ELSE u.CPERSON_LEVEL
  END as USER_PERSON_LEVEL,
  u.CSTATE as USER_STATE,
  u.CLOCK_FLAG as USER_LOCK_FLAG,
  
  -- 供应商信息
  supplier.CCODE as SUPPLIER_CODE,
  supplier.CNAME as SUPPLIER_NAME,
  supplier.CSHORT_NAME as SUPPLIER_SHORT_NAME,
  
  -- 责任人信息
  rp.CID as RESPONSIBLE_PERSON_ID,
  rp.CCODE as RESPONSIBLE_PERSON_CODE,
  rp.CNAME as RESPONSIBLE_PERSON_NAME,
  
  -- 使用组织信息
  ubo.CID as USING_BIZ_ORG_ID,
  ubo.CCODE as USING_BIZ_ORG_CODE,
  ubo.CNAME as USING_BIZ_ORG_NAME,
  
  -- 分发点信息
  wc.CDISTRIBUTION_POINT_ID as DISTRIBUTION_POINT_ID,
  
  -- 系统字段
  wc.CENV as ENV,
  wc.CCREATOR_ID as CREATOR_ID,
  creator.CCODE as CREATOR_CODE,
  creator.CNAME as CREATOR_NAME,
  wc.CCREATE_TIME as CREATE_TIME,
  wc.CMODIFIER_ID as MODIFIER_ID,
  modifier.CCODE as MODIFIER_CODE,
  modifier.CNAME as MODIFIER_NAME,
  wc.CLATEST_UPDATE_TIME as LATEST_UPDATE_TIME
FROM target.MOM_WORK_CENTER wc
LEFT JOIN target.SYS_BIZ_ORG bo ON wc.CBIZ_ORG_ID = bo.CID AND bo.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_BIZ_ORG factory ON wc.CFACTORY_ID = factory.CID AND factory.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.MOM_WORK_CENTER_EQUIP_LINK wcel ON wc.CID = wcel.CSOURCE_ID AND wcel.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.MOM_EQUIP e ON wcel.CEQUIP_ID = e.CID AND e.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.MOM_WORK_CENTER_PERSON_LINK wcpl ON wc.CID = wcpl.CSOURCE_ID AND wcpl.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_PERSON p ON wcpl.CPERSON_ID = p.CID AND p.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_USER u ON p.CUSER_ID = u.CID AND u.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.MOM_WORK_CENTER_SUPPLIER_LINK wcsl ON wc.CID = wcsl.CSOURCE_ID AND wcsl.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_BIZ_ORG supplier ON wcsl.CSUPPLIER_ID = supplier.CID AND supplier.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_PERSON rp ON e.CRESPONSIBLE_PERSON_ID = rp.CID AND rp.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_BIZ_ORG ubo ON e.CUSING_BIZ_ORG_ID = ubo.CID AND ubo.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_PERSON creator ON wc.CCREATOR_ID = creator.CID AND creator.CSOFT_DELETE_FLAG = 0
LEFT JOIN target.SYS_PERSON modifier ON wc.CMODIFIER_ID = modifier.CID AND modifier.CSOFT_DELETE_FLAG = 0
WHERE wc.CSOFT_DELETE_FLAG = 0;

-- =============================================
-- 3. 使用示例查询
-- =============================================

-- 查询某个工作中心的所有关联信息
-- SELECT * FROM bi.MOM_WORK_CENTER_WIDE WHERE WORK_CENTER_ID = 12345;

-- 查询某个工厂下的所有工作中心及其关联的设备
-- SELECT WORK_CENTER_NAME, EQUIP_NAME, EQUIP_TYPE 
-- FROM bi.MOM_WORK_CENTER_WIDE 
-- WHERE FACTORY_ID = 67890 AND EQUIP_ID IS NOT NULL;

-- 查询某个工作中心关联的所有人员
-- SELECT PERSON_NAME, PERSON_PHONE_NUMBER, PERSON_EMAIL 
-- FROM bi.MOM_WORK_CENTER_WIDE 
-- WHERE WORK_CENTER_ID = 12345 AND PERSON_ID IS NOT NULL;

-- 统计某个工厂下各类型工作中心的数量
-- SELECT WORK_CENTER_TYPE, COUNT(DISTINCT WORK_CENTER_ID) as WORK_CENTER_COUNT
-- FROM bi.MOM_WORK_CENTER_WIDE 
-- WHERE FACTORY_ID = 67890
-- GROUP BY WORK_CENTER_TYPE;
